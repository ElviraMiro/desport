{"version":3,"file":"/packages/zimme:collection-behaviours.js","sources":["zimme:collection-behaviours/collection-behaviour.coffee","zimme:collection-behaviours/mongo.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;aAAa,EAAb;;gBACA,GAAmB,EADnB;;KAGK,CAAC,MAAN,GAAe,SAAS;AACtB;EADuB,0BAAW,8DAClC;MAAG,CAAC,CAAC,QAAF,CAAW,SAAX,CAAH;AACE,cAAU,gBAAiB,WAA3B;IACA,YAAY,UAAW,WADvB,CADF;;AAIA,MAAG,CAAC,CAAC,UAAF,CAAa,SAAb,CAAH;AACE,cACE;kBAAY,IAAZ;MACA,SAAS,OADT;KADF;IAIA,SAAS,CAAC,KAAV,CAAgB,OAAhB,EAAyB,IAAzB,CAJA,CADF;;AAQE,WAAO,CAAC,IAAR,CAAa,qBAAb,EARF;GALsB;CAHxB;;;oCAsBE;;sBAAC,OAAD,GAAS;AACP;IADQ,2BAAY,8DACpB;iBAAM,CAAC,KAAP,CAAa,UAAb,EAAyB,IAAzB,EADO;GAAT;;EAGA,oBAAC,UAAD,GAAY,SAAC,IAAD,EAAO,OAAP;AACV,QAAG,QAAQ,UAAX;aACE,gBAAiB,MAAjB,GAAyB,QAD3B;;aAIE,OAAO,CAAC,IAAR,CAAa,uCAAb,EAJF;KADU;GAHZ;;EAUA,oBAAC,OAAD,GAAS,SAAC,IAAD,EAAO,SAAP,EAAkB,OAAlB;AACP,QAAG,QAAQ,UAAR,IAAuB,oBAAI,OAAO,CAAE,iBAAvC;aACE,OAAO,CAAC,IAAR,CAAa,2DAAb,EADF;;aAIE,UAAW,MAAX,GAAmB,UAJrB;KADO;GAVT;;;;IAtBF;A;;;;;;;;;;;;;;;;;;ACAA;;SAAS,KAAK,CAAC,MAAf;;KAEK,CAAC,UAAU,UAAE,gBAAlB,GAAoC;SAClC,MAAM,CAAC,KAAP,CAAa,IAAb,EAAgB,SAAhB,EADkC;CAFpC;A","sourcesContent":["behaviours = {}\nbehaviourOptions = {}\n\nshare.attach = attach = (behaviour, args...) ->\n  if _.isString behaviour\n    options = behaviourOptions[behaviour]\n    behaviour = behaviours[behaviour]\n\n  if _.isFunction behaviour\n    context =\n      collection: @\n      options: options\n\n    behaviour.apply context, args\n\n  else\n    console.warn 'Behaviour not found'\n\n  return\n\nclass CollectionBehaviours\n\n  @attach: (collection, args...) ->\n    attach.apply collection, args\n\n  @configure: (name, options) ->\n    if name of behaviours\n      behaviourOptions[name] = options\n\n    else\n      console.warn 'Configure failed, behaviour not found'\n\n  @define: (name, behaviour, options) ->\n    if name of behaviours and not options?.replace\n      console.warn 'Behaviour already defined, use replace option to override'\n\n    else\n      behaviours[name] = behaviour\n","attach = share.attach\n\nMongo.Collection::attachBehaviour = ->\n  attach.apply @, arguments\n"]}