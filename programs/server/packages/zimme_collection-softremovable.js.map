{"version":3,"file":"/packages/zimme:collection-softremovable.js","sources":["zimme:collection-softremovable/softremovable.coffee"],"names":[],"mappings":"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","sourcesContent":["af = Package['aldeed:autoform']\nc2 = Package['aldeed:collection2']\nss = Package['aldeed:simple-schema']\n\ndefaults =\n  removed: 'removed'\n  removedAt: 'removedAt'\n  removedBy: 'removedBy'\n  restoredAt: 'restoredAt'\n  restoredBy: 'restoredBy'\n\nbehaviour = (options = {}) ->\n\n  {removed, removedAt, removedBy, restoredAt, restoredBy} =\n    _.defaults options, @options, defaults\n\n  if ss?\n    SimpleSchema = ss.SimpleSchema\n\n    afDefinition = autoform:\n      omit: true\n\n    addAfDef = (definition) ->\n      _.extend definition, afDefinition\n\n    c2Definition =\n      denyInsert: true\n\n    addC2Def = (definition) ->\n      _.extend definition, c2Definition\n\n    definition = {}\n\n    def = definition[removed] =\n      optional: true\n      type: Boolean\n\n    addAfDef def if af?\n\n    if removedAt\n      def = definition[removedAt] =\n        optional: true\n        type: Date\n\n      addC2Def def if c2?\n\n      addAfDef def if af?\n\n    if removedBy\n      def = definition[removedBy] =\n        optional: true\n        regEx: new RegExp \"(#{SimpleSchema.RegEx.Id.source})|^0$\"\n        type: String\n\n      addC2Def def if c2?\n\n      addAfDef def if af?\n\n    if restoredAt\n      def = definition[restoredAt] =\n        optional: true\n        type: Date\n\n      addAfDef def if af?\n\n      addC2Def def if c2?\n\n    if restoredBy\n      def = definition[restoredBy] =\n        optional: true\n        regEx: new RegExp \"(#{SimpleSchema.RegEx.Id.source})|^0$\"\n        type: String\n\n      addAfDef def if af?\n\n      addC2Def def if c2?\n\n    @collection.attachSchema new SimpleSchema definition\n\n  beforeFindHook = (userId = '0', selector = {}, options = {}) ->\n    isSelectorId = _.isString(selector) or '_id' of selector\n    unless options.removed or isSelectorId or selector[removed]?\n      selector[removed] =\n        $exists: false\n\n    @args[0] = selector\n    return\n\n  @collection.before.find beforeFindHook\n  @collection.before.findOne beforeFindHook\n\n  @collection.before.update (userId = '0', doc, fieldNames, modifier,\n    options) ->\n\n    $set = modifier.$set ?= {}\n    $unset = modifier.$unset ?= {}\n\n    if $set[removed] and doc[removed]?\n      return false\n\n    if $unset[removed] and not doc[removed]?\n      return false\n\n    if $set[removed] and not doc[removed]?\n      $set[removed] = true\n\n      if removedAt\n        $set[removedAt] = new Date\n\n      if removedBy\n        $set[removedBy] = userId\n\n      if restoredAt\n        $unset[restoredAt] = true\n\n      if restoredBy\n        $unset[restoredBy] = true\n\n    if $unset[removed] and doc[removed]?\n      $unset[removed] = true\n\n      if removedAt\n        $unset[removedAt] = true\n\n      if removedBy\n        $unset[removedBy] = true\n\n      if restoredAt\n        $set[restoredAt] = new Date\n\n      if restoredBy\n        $set[restoredBy] = userId\n\n  isLocalCollection = @collection._connection is null\n\n  throwIfSelectorIsntId = (selector, method) ->\n    unless _.isString(selector) or '_id' of selector\n      throw new Meteor.Error 403, 'Not permitted. Untrusted code may only ' +\n        \"#{method} documents by ID.\"\n\n  @collection.softRemove = (selector, callback) ->\n    return 0 unless selector\n\n    if Meteor.isClient and not isLocalCollection\n      throwIfSelectorIsntId selector, 'softRemove'\n\n    modifier =\n      $set: $set = {}\n\n    $set[removed] = true\n\n    if Meteor.isServer or isLocalCollection\n      ret = @update selector, modifier, multi: true, callback\n\n    else\n      ret = @update selector, modifier, callback\n\n    if ret is false\n      0\n    else\n      ret\n\n  @collection.restore = (selector, callback) ->\n    return 0 unless selector\n\n    if Meteor.isClient and not isLocalCollection\n      throwIfSelectorIsntId selector, 'restore'\n\n    modifier =\n      $unset: $unset = {}\n\n    $unset[removed] = true\n\n    if Meteor.isServer or isLocalCollection\n      selector[removed] = true\n      ret = @update selector, modifier, multi: true, callback\n\n    else\n      ret = @update selector, modifier, callback\n\n    if ret is false\n      0\n    else\n      ret\n\nCollectionBehaviours.define 'softRemovable', behaviour\n"]}